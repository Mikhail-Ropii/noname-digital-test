{"version":3,"file":"static/js/831.7cd2a97f.chunk.js","mappings":"gdAIaA,EAAYC,EAAAA,EAAAA,IAAH,0IAQTC,GAAeD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sPAeZG,EAAoBH,EAAAA,EAAAA,EAAH,4IAQjBI,EAAqBJ,EAAAA,EAAAA,IAAH,uVAclBK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,6FAMTO,GAAoBP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,uCAIjBS,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,4GAMVW,EAASX,EAAAA,EAAAA,OAAH,iUAiBNY,EAAYZ,EAAAA,EAAAA,OAAH,mPAYTa,EAAab,EAAAA,EAAAA,IAAH,wEAKVc,EAAQd,EAAAA,EAAAA,MAAH,mL,wECrFZe,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAEJH,MAAM,sGACNK,IAAI,KACJC,SAAS,2GACZL,SAAUE,EAAAA,KAEPG,SAAS,0IACTC,IAAI,EAAG,uMA8CZ,UA3Ce,WAQb,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACER,cAAeA,EACfS,iBAAkBN,EAClBO,SAVe,SAAC,EAAD,GAAwC,EAArCT,MAAqC,EAA9BC,SAA8B,EAAhBS,WAOzC,UAKE,UAAC,IAAD,YACE,UAAC,KAAD,CAAOC,QAAQ,OAAf,WACE,SAAC,KAAD,qBACA,SAAC,KAAD,CAAmBC,KAAK,QAAQC,UAAU,SAC1C,SAAC,KAAD,CAAYC,KAAK,QAAQF,KAAK,QAAQG,GAAG,cAE3C,UAAC,KAAD,CAAOJ,QAAQ,SAAf,WACE,SAAC,KAAD,oDACA,SAAC,KAAD,CAAmBC,KAAK,WAAWC,UAAU,SAC7C,SAAC,KAAD,CAAYC,KAAK,WAAWF,KAAK,WAAWG,GAAG,iBAEjD,SAAC,KAAD,CAAQC,QAAQ,YAAYF,KAAK,SAAjC,sFAKJ,SAAC,KAAD,kCACA,UAAC,KAAD,CAAWA,KAAK,SAAhB,WACE,SAAC,KAAD,CACEG,IAAI,uDACJC,MAAO,GACPC,IAAI,WAJR","sources":["components/common.styled.js","pages/signUp/SignUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #212121;\n  transition: 0.35s;\n  :hover {\n    color: #2196f3;\n  }\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n`;\n\nexport const AuthorizationText = styled.p`\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const AuthorizationBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #f5f4fa;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 40px;\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 100px;\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ErrorMessageStyle = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  background: #2196f3;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  padding: 10px 32px;\n  color: #ffffff;\n  margin-bottom: 10px;\n\n  transition: 0.35s;\n  :hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  display: flex;\n  padding: 10px 32px;\n  background-color: #ffffff;\n  border-radius: 4px;\n  border-color: #188ce8;\n  border: 1px solid #2196f3;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n\nexport const GoogleIcon = styled.img`\n  margin-right: 10px;\n  align-self: baseline;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Button,\n  Label,\n  FieldStyle,\n  ErrorMessageStyle,\n  FormStyle,\n  GoogleBtn,\n  AuthorizationText,\n  GoogleIcon,\n} from 'components/common.styled';\nimport { AuthorizationBlock } from 'components/common.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Введите валидный E-mail')\n    .max(255)\n    .required('Email обязательное поле'),\n  password: yup\n    .string()\n    .required('Пароль обязательное поле')\n    .min(7, 'Пароль должен быть не менее 7 символов'),\n});\n\nconst SignUp = () => {\n  // const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    // dispatch(operations.logIn({ email, password }));\n    // resetForm();\n  };\n\n  return (\n    <AuthorizationBlock>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyle>\n          <Label htmlFor=\"name\">\n            <AuthorizationText>Email</AuthorizationText>\n            <ErrorMessageStyle name=\"email\" component=\"div\" />\n            <FieldStyle type=\"email\" name=\"email\" id=\"email\" />\n          </Label>\n          <Label htmlFor=\"number\">\n            <AuthorizationText>Пароль</AuthorizationText>\n            <ErrorMessageStyle name=\"password\" component=\"div\" />\n            <FieldStyle type=\"password\" name=\"password\" id=\"password\" />\n          </Label>\n          <Button variant=\"contained\" type=\"submit\">\n            Регистрация\n          </Button>\n        </FormStyle>\n      </Formik>\n      <AuthorizationText>или</AuthorizationText>\n      <GoogleBtn type=\"submit\">\n        <GoogleIcon\n          src=\"https://img.icons8.com/color/48/null/google-logo.png\"\n          width={20}\n          alt=\"google\"\n        />\n        Продолжить с Google\n      </GoogleBtn>\n    </AuthorizationBlock>\n  );\n};\nexport default SignUp;\n"],"names":["Container","styled","NavLinkStyle","NavLink","AuthorizationText","AuthorizationBlock","FormStyle","Form","ErrorMessageStyle","ErrorMessage","FieldStyle","Field","Button","GoogleBtn","GoogleIcon","Label","initialValues","email","password","schema","yup","shape","max","required","min","validationSchema","onSubmit","resetForm","htmlFor","name","component","type","id","variant","src","width","alt"],"sourceRoot":""}