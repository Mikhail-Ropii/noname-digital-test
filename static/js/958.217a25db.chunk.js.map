{"version":3,"file":"static/js/958.217a25db.chunk.js","mappings":"gdAIaA,EAAYC,EAAAA,EAAAA,IAAH,0IAQTC,GAAeD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sPAeZG,EAAoBH,EAAAA,EAAAA,EAAH,4IAQjBI,EAAqBJ,EAAAA,EAAAA,IAAH,uVAclBK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,6FAMTO,GAAoBP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,uCAIjBS,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,4GAMVW,EAASX,EAAAA,EAAAA,OAAH,iUAiBNY,EAAYZ,EAAAA,EAAAA,OAAH,mPAYTa,EAAab,EAAAA,EAAAA,IAAH,wEAKVc,EAAQd,EAAAA,EAAAA,MAAH,mL,oGChGLe,EAAmBf,EAAAA,EAAAA,IAAH,yHAOhBgB,GAAYhB,EAAAA,EAAAA,GAAOiB,EAAAA,GAAPjB,CAAH,mE,UCPTkB,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC7B,OACE,SAAC,KAAD,WACE,UAACJ,EAAD,YACE,qcAIA,SAACC,EAAD,CAAWI,GAAI,UAAf,iFACA,SAACJ,EAAD,CAAWI,GAAI,UAAf,iFACA,SAAC,KAAD,CAAQC,QAASF,EAAjB,+D,2JCXKG,EAAWtB,EAAAA,EAAAA,IAAH,iTAYRuB,EAAWvB,EAAAA,EAAAA,EAAH,2JAURwB,EAAUxB,EAAAA,EAAAA,IAAH,wEAKPyB,EAAYzB,EAAAA,EAAAA,EAAH,4J,yJC3BT0B,EAAkB1B,EAAAA,EAAAA,EAAH,oIASf2B,EAAkB3B,EAAAA,EAAAA,IAAH,kEAKf4B,EAAa5B,EAAAA,EAAAA,IAAH,sE,qEC2DvB,EAxDoB,WAClB,OAAsC6B,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,YAA1C,eAAOG,EAAP,KAAsBC,EAAtB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEAE,GAAeC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA1CH,YAERI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkBC,EAAKC,MAC3B,SAAAC,GAAO,OAAIA,EAAQV,GAAGW,aAAeX,EAAGW,cAEtCJ,GACFR,EAAiBQ,KAElB,CAACP,IAEJ,IAAMY,GAAWC,EAAAA,EAAAA,MACXC,GAAOX,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMU,KAAKA,QAgB7C,OACE,SAAC,KAAD,UACGhB,IACC,UAACL,EAAD,YACE,SAACC,EAAD,CAAYqB,IAAKjB,EAAckB,MAAOC,MAAM,QAAQC,IAAI,UACxD,4BACE,SAAC,KAAD,UAAWpB,EAAcqB,QACzB,SAAC3B,EAAD,UAAkBM,EAAcsB,eAChC,UAAC,KAAD,WAAYtB,EAAcuB,MAA1B,2BACA,SAAC,KAAD,CAAQlC,QAAS,kBAvBN,SAAAmC,GACnB,GAAKpB,EAAL,CAIA,GAAIY,EAAKL,MAAK,SAAAC,GAAO,OAAIA,EAAQV,KAAOsB,EAAKtB,MAG3C,OAFAY,EAASW,EAAAA,EAAAA,QAAAA,OAAyBD,EAAKtB,UACvCwB,EAAAA,GAAAA,QAAA,gCAAsCF,EAAKH,MAAQ,8CAGrDP,EAASW,EAAAA,EAAAA,QAAAA,UAA4BD,IACrCE,EAAAA,GAAAA,QAAA,yCAAqCF,EAAKH,KAA1C,qDAA2D,mDATzDtB,GAAe,GAqBc4B,CAAa3B,IAApC,sDAEF,SAAC,IAAD,CACE4B,OAAQ9B,EACR+B,aAAa,EACbC,eAAgB,kBAAM/B,GAAe,IAHvC,UAKE,SAACb,EAAA,EAAD,CAAcC,WAAY,kBAAMY,GAAe,e","sources":["components/common.styled.js","components/modal/modalContent.styled.js","components/modal/ModalContent.jsx","components/productCard/productCard.styled.js","pages/productInfo/productInfo.styled.js","pages/productInfo/ProductInfo.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #212121;\n  transition: 0.35s;\n  :hover {\n    color: #2196f3;\n  }\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n`;\n\nexport const AuthorizationText = styled.p`\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const AuthorizationBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #f5f4fa;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 40px;\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 100px;\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ErrorMessageStyle = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  background: #2196f3;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  padding: 10px 32px;\n  color: #ffffff;\n  margin-bottom: 10px;\n\n  transition: 0.35s;\n  :hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  display: flex;\n  padding: 10px 32px;\n  background-color: #ffffff;\n  border-radius: 4px;\n  border-color: #188ce8;\n  border: 1px solid #2196f3;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n\nexport const GoogleIcon = styled.img`\n  margin-right: 10px;\n  align-self: baseline;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ModalContentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalLink = styled(Link)`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n","import { AuthorizationBlock, Button } from 'components/common.styled';\nimport { ModalContentWrap, ModalLink } from './modalContent.styled';\n\nexport const ModalContent = ({ closeModal }) => {\n  return (\n    <AuthorizationBlock>\n      <ModalContentWrap>\n        <p>\n          Чтобы добавить товар в корзину, Вам нужно авторизоваться или\n          зарегистрироваться\n        </p>\n        <ModalLink to={'/signin'}>Авторизация</ModalLink>\n        <ModalLink to={'/signup'}>Регистрация</ModalLink>\n        <Button onClick={closeModal}>Закрыть</Button>\n      </ModalContentWrap>\n    </AuthorizationBlock>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CardWrap = styled.div`\n  background: #f5f4fa;\n  border-radius: 16px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const CardName = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 25px;\n  margin-bottom: 15px;\n\n  text-align: center;\n  color: #212121;\n`;\n\nexport const CardImg = styled.img`\n  border-radius: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const CardPrice = styled.p`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 41px;\n  text-align: center;\n\n  color: #2196f3;\n  margin-bottom: 15px;\n`;\n","import styled from '@emotion/styled';\n\nexport const CardDescription = styled.p`\n  font-weight: 400;\n  font-size: 17px;\n  line-height: 20px;\n\n  color: #212121;\n  margin-bottom: 15px;\n`;\n\nexport const ProductInfoWrap = styled.div`\n  display: flex;\n  margin-bottom: 25px;\n`;\n\nexport const ProductImg = styled.img`\n  border-radius: 5px;\n  margin-right: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport data from '../../data';\nimport { useParams } from 'react-router-dom';\nimport { Container, Button } from 'components/common.styled';\nimport {\n  CardName,\n  CardPrice,\n} from '../../components/productCard/productCard.styled';\nimport {\n  CardDescription,\n  ProductInfoWrap,\n  ProductImg,\n} from './productInfo.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartSlice } from 'redux/cartReducer';\nimport { NotificationManager } from 'react-notifications';\nimport Modal from 'react-modal';\nimport { ModalContent } from 'components/modal/ModalContent';\n\nconst ProductInfo = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [productDetail, setProductDetail] = useState();\n  const { id } = useParams();\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n\n  useEffect(() => {\n    const selectedProduct = data.find(\n      product => product.id.toString() === id.toString()\n    );\n    if (selectedProduct) {\n      setProductDetail(selectedProduct);\n    }\n  }, [id]);\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart.cart);\n\n  const handleBuyBtn = item => {\n    if (!isLoggedIn) {\n      setModalIsOpen(true);\n      return;\n    }\n    if (cart.find(product => product.id === item.id)) {\n      dispatch(cartSlice.actions.addQty(item.id));\n      NotificationManager.success(`Еще +1 ${item.name}`, 'Корзина');\n      return;\n    }\n    dispatch(cartSlice.actions.addToCart(item));\n    NotificationManager.success(`Товар ${item.name} добавлен`, 'Корзина');\n  };\n\n  return (\n    <Container>\n      {productDetail && (\n        <ProductInfoWrap>\n          <ProductImg src={productDetail.image} width=\"300px\" alt=\"game\" />\n          <div>\n            <CardName>{productDetail.name}</CardName>\n            <CardDescription>{productDetail.description}</CardDescription>\n            <CardPrice>{productDetail.price} грн.</CardPrice>\n            <Button onClick={() => handleBuyBtn(productDetail)}>Купить</Button>\n          </div>\n          <Modal\n            isOpen={modalIsOpen}\n            ariaHideApp={false}\n            onRequestClose={() => setModalIsOpen(false)}\n          >\n            <ModalContent closeModal={() => setModalIsOpen(false)} />\n          </Modal>\n        </ProductInfoWrap>\n      )}\n    </Container>\n  );\n};\nexport default ProductInfo;\n"],"names":["Container","styled","NavLinkStyle","NavLink","AuthorizationText","AuthorizationBlock","FormStyle","Form","ErrorMessageStyle","ErrorMessage","FieldStyle","Field","Button","GoogleBtn","GoogleIcon","Label","ModalContentWrap","ModalLink","Link","ModalContent","closeModal","to","onClick","CardWrap","CardName","CardImg","CardPrice","CardDescription","ProductInfoWrap","ProductImg","useState","modalIsOpen","setModalIsOpen","productDetail","setProductDetail","id","useParams","isLoggedIn","useSelector","state","auth","useEffect","selectedProduct","data","find","product","toString","dispatch","useDispatch","cart","src","image","width","alt","name","description","price","item","cartSlice","NotificationManager","handleBuyBtn","isOpen","ariaHideApp","onRequestClose"],"sourceRoot":""}