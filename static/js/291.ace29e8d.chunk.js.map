{"version":3,"file":"static/js/291.ace29e8d.chunk.js","mappings":"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","sources":["components/common.styled.js","components/modal/modalContent.styled.js","components/modal/ModalContent.jsx","components/productCard/productCard.styled.js","components/productCard/ProductCard.jsx","pages/productList/productList.styled.js","pages/productList/ProductList.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #212121;\n  transition: 0.35s;\n  :hover {\n    color: #2196f3;\n  }\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n`;\n\nexport const AuthorizationText = styled.p`\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.03em;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const AuthorizationBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #f5f4fa;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 40px;\n  max-width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 100px;\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ErrorMessageStyle = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  background: #2196f3;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  padding: 10px 32px;\n  color: #ffffff;\n  margin-bottom: 10px;\n\n  transition: 0.35s;\n  :hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  display: flex;\n  padding: 10px 32px;\n  background-color: #ffffff;\n  border-radius: 4px;\n  border-color: #188ce8;\n  border: 1px solid #2196f3;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n\nexport const GoogleIcon = styled.img`\n  margin-right: 10px;\n  align-self: baseline;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ModalContentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalLink = styled(Link)`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n","import { AuthorizationBlock, Button } from 'components/common.styled';\nimport { ModalContentWrap, ModalLink } from './modalContent.styled';\n\nexport const ModalContent = ({ closeModal }) => {\n  return (\n    <AuthorizationBlock>\n      <ModalContentWrap>\n        <p>\n          Чтобы добавить товар в корзину, Вам нужно авторизоваться или\n          зарегистрироваться\n        </p>\n        <ModalLink to={'/signin'}>Авторизация</ModalLink>\n        <ModalLink to={'/signup'}>Регистрация</ModalLink>\n        <Button onClick={closeModal}>Закрыть</Button>\n      </ModalContentWrap>\n    </AuthorizationBlock>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CardWrap = styled.div`\n  background: #f5f4fa;\n  border-radius: 16px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const CardName = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 25px;\n  margin-bottom: 15px;\n\n  text-align: center;\n  color: #212121;\n`;\n\nexport const CardImg = styled.img`\n  border-radius: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const CardPrice = styled.p`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 41px;\n  text-align: center;\n\n  color: #2196f3;\n  margin-bottom: 15px;\n`;\n","import { Button } from 'components/common.styled';\nimport { CardWrap, CardName, CardImg, CardPrice } from './productCard.styled';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartSlice } from 'redux/cartReducer';\nimport { NotificationManager } from 'react-notifications';\nimport Modal from 'react-modal';\nimport { ModalContent } from 'components/modal/ModalContent';\nimport { useState } from 'react';\n\nexport const ProductCard = ({ item }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart.cart);\n\n  const handleBuyBtn = item => {\n    if (!isLoggedIn) {\n      setModalIsOpen(true);\n      return;\n    }\n    if (cart.find(product => product.id === item.id)) {\n      dispatch(cartSlice.actions.addQty(item.id));\n      NotificationManager.success(`Еще +1 ${item.name}`, 'Корзина');\n      return;\n    }\n    dispatch(cartSlice.actions.addToCart(item));\n    NotificationManager.success(`Товар ${item.name} добавлен`, 'Корзина');\n  };\n\n  return (\n    <CardWrap>\n      <Link to={`/products/${item.id}`}>\n        <CardName>{item.name}</CardName>\n        <CardImg src={item.image} width=\"200px\" alt=\"game\" />\n        <CardPrice>{item.price} грн.</CardPrice>\n      </Link>\n      <Button onClick={() => handleBuyBtn(item)}>Купить</Button>\n      <Modal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n      >\n        <ModalContent closeModal={() => setModalIsOpen(false)} />\n      </Modal>\n    </CardWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const ProductItem = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 17px;\n  row-gap: 17px;\n`;\n\nexport const SortWrap = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n","import data from '../../data';\nimport { ProductCard } from '../../components/productCard/ProductCard';\nimport { Container } from 'components/common.styled';\nimport {\n  ProductItem,\n  ListContainer,\n  SortWrap,\n  Title,\n} from './productList.styled';\nimport { useState } from 'react';\n\nconst ProductList = () => {\n  const [platform, setPlatform] = useState();\n  const [sort, setSort] = useState();\n\n  const changePlatform = platform => {\n    setPlatform(platform);\n  };\n  const changeSort = sort => {\n    setSort(sort);\n  };\n\n  const filteredList = data.filter(item => {\n    if (platform) {\n      return item.category === platform;\n    }\n    return data;\n  });\n\n  const sortList = filteredList.sort(function (a, b) {\n    let sorted;\n    if (sort === 'all') {\n      sorted = filteredList;\n    }\n    if (sort === 'min') {\n      sorted = a.price > b.price ? 1 : -1;\n    }\n    if (sort === 'max') {\n      sorted = a.price < b.price ? 1 : -1;\n    }\n    if (sort === 'pop') {\n      sorted = a.popularity < b.popularity ? 1 : -1;\n    }\n    return sorted;\n  });\n\n  return (\n    <Container>\n      <Title>Товары</Title>\n      <SortWrap>\n        <form>\n          <select\n            name=\"platform\"\n            onChange={event => changePlatform(event.target.value)}\n            value={platform}\n            defaultValue={''}\n          >\n            <option value=\"\">Категория</option>\n            <option value=\"PS\">PS</option>\n            <option value=\"XBOX\">XBOX</option>\n          </select>\n        </form>\n        <form>\n          <select\n            name=\"sort\"\n            onChange={event => changeSort(event.target.value)}\n            value={sort}\n            defaultValue={'all'}\n          >\n            <option value=\"all\">Сортировка</option>\n            <option value=\"min\">От дешевых</option>\n            <option value=\"max\">От дорогих</option>\n            <option value=\"pop\">По популярности</option>\n          </select>\n        </form>\n      </SortWrap>\n      <ListContainer>\n        <ProductItem>\n          {sortList.map(item => (\n            <li key={item.id}>\n              <ProductCard item={item} />\n            </li>\n          ))}\n        </ProductItem>\n      </ListContainer>\n    </Container>\n  );\n};\nexport default ProductList;\n"],"names":["Container","styled","NavLinkStyle","NavLink","AuthorizationText","AuthorizationBlock","FormStyle","Form","ErrorMessageStyle","ErrorMessage","FieldStyle","Field","Button","GoogleBtn","GoogleIcon","Label","ModalContentWrap","ModalLink","Link","ModalContent","closeModal","to","onClick","CardWrap","CardName","CardImg","CardPrice","ProductCard","item","useState","modalIsOpen","setModalIsOpen","isLoggedIn","useSelector","state","auth","dispatch","useDispatch","cart","id","name","src","image","width","alt","price","find","product","cartSlice","NotificationManager","handleBuyBtn","ariaHideApp","isOpen","onRequestClose","ListContainer","ProductItem","SortWrap","Title","platform","setPlatform","sort","setSort","filteredList","data","filter","category","sortList","a","b","sorted","popularity","onChange","event","changePlatform","target","value","defaultValue","changeSort","map"],"sourceRoot":""}